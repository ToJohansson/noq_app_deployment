name: CI/CD DEPLOYMENT

on:
  push:
    branches:
      - noq-507

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_STATIC_IP }} "echo 'SSH connection successful!'"

      - name: Build and Deploy
        if: success()
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_STATIC_IP }} << 'EOF'
          cd /home/ubuntu/noq_app_deployment

          # --- Handling submodule, FRONT/BACK --- 
          cd noQ-Frontend
          echo "FETCHING FRONTEND SUBMODULE... <-----------------"
          git fetch origin
          git stash push --include-untracked || true  # Save any local changes
          git reset --hard HEAD || true  # Discard any uncommitted changes

          git checkout main 
          git pull origin main
          # git checkout noq-front-507 #<-------- test your branch 
          # git pull origin noq-front-507 #<-------- test your branch
          cd ..

          cd noq_backend_python
          echo "FETCHING BACKEND SUBMODULE... <-----------------"
          git fetch origin
          git stash push --include-untracked || true  # Save any local changes
          git reset --hard HEAD || true  # Discard any uncommitted changes
          cd ..

          # --- Handling changes in the main repository --- 
          echo "HANDLING MAIN... <-----------------"
          git fetch origin
          git stash push --include-untracked || true  # Save any local changes
          git reset --hard HEAD || true  # Discard any uncommitted changes
          git checkout main
          git pull origin main
          # git checkout noq-507 # <--------  test your branch
          # git pull origin noq-507 # <-------- test your branch

          # --- Update submodules to match the main repository ---
          echo "SUBMODULE INTI n UPDATE... <-----------------"  
          git submodule init
          git submodule update

          # --- Docker operations --- 
          echo "DOCKER OPERATIONS STARTING... <-----------------"
          sudo docker-compose down
          sudo docker volume rm $(sudo docker volume ls -qf name=noq_app_deployment_static-frontend) || true
          sudo docker-compose build
          sudo docker-compose up -d

          echo 'End of Deployment'
          EOF
